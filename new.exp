#!/usr/bin/expect -f

log_file testOutput
#
# This Expect script was generated by autoexpect on Sat Mar 26 17:16:02 2022
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 1  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .03
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
#spawn /home/tassilo/.jdks/corretto-11.0.10/bin/java -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:42355,suspend=y,server=n -javaagent:/snap/intellij-idea-ultimate/348/plugins/java/lib/rt/debugger-agent.jar -Dfile.encoding=UTF-8 -classpath /home/tassilo/IdeaProjects/Proggen2/out/production/Proggen2
spawn /home/tassilo/.jdks/corretto-11.0.10/bin/java -Dfile.encoding=UTF-8 -classpath /home/tassilo/IdeaProjects/Proggen2/out/production/Proggen2 edu.kit.informatik.Application
match_max 100000

#input:
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "32,23\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "4\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "3\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "5\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "2,3\r"
expect -exact ""
send -- "3\r"
expect -exact ""
send -- "3\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "3,4\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "4\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "3\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "1,2,3,4\r"
expect -exact ""
send -- "42,24\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "5\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "5\r"
expect -exact ""
send -- "1\r"
expect -exact ""
send -- "6\r"
expect -exact ""
send -- "2\r"
expect -exact ""
send -- "quit\r"

expect eof
